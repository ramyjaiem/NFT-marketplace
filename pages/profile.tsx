import Head from 'next/head';
import { useEffect, useState } from 'react';
import styled from 'styled-components';
import Layout from '../components/Layout';
import { Grid, Spin } from 'antd';
import useSWR from 'swr';
import axios from 'axios';
import { Row, Col } from 'react-bootstrap'
import ProfileInfoCard from '../components/Profile/ProfileCard';
import BioAndSocials from '../components/Profile/BioAndSocials';

import HoldingsChart from '../components/Profile/HoldingsChart';
import HoldingsAreaChart from '../components/Profile/HoldingsAreaChat';

import { useAuth } from '../utils/auth';
import { getPortfolio } from '../utils/getPortfolio';
import TransactionsTable from '../components/Profile/TransactionsTable';
import WalletConnect from '../components/WalletConnect';
import { useWallet } from '../utils/wallet';

const { useBreakpoint } = Grid;

const PageWrapper = styled.main`
  align-items: center;
  justify-content: center;
  padding-top: 2%;
`;

const Banner = styled.div`
  position: relative;
  overflow: hidden;
  border: 1px solid #851cef;
  border-radius: 4px;
  max-height: 500px;
`;

const BannerImg = styled.img`
  width: 100%;
  height: 100%;
`;
const ContentArea = styled.div`
  margin: 0 5%;
`;

const Holdings = styled.div`
  margin: 1rem 0;
  height: 320px;
  padding: 10px;
  border: 1px solid #851cef;
  background-color: ${(props) => props.theme.colors.cardBG};
  border-radius: 4px;
  .header {
    color: ${(props) => props.theme.colors.white};
    font-weight: 500;
    font-size: 25px;
    margin-bottom: 20px;
  }
`;

const TableHeader = styled.div`
  color: ${(props) => props.theme.colors.white};
  font-size: 20px;
  width: 100%;
  padding: 20px 50px;
  background-color: ${(props) => props.theme.colors.cardBG};
  border: 1px solid #851cef;
  border-radius: 4px;
  margin: 0px;
  @media only screen and (max-device-width: 480px) {
    padding: 20px 4px;
    font-size: 18px;
  }
  .table-1 {
    border-bottom: 6px solid #851cef;
  }
  .table-2 {
    margin-left: 7%;
  }
`;

export const LoadingContainer = styled.div`
  margin: 0;
  display: grid;
  place-items: center;
`;

const PageSpin = styled(LoadingContainer)`
margin 0;
margin-top: 10%;
.setup-info {
   font-size: 20px;
   color: ${(props) => props.theme.colors.white};
 }
 @media screen and (min-width: 1600px) {
  margin-top: 18%;
 }
 @media (max-width: 700px) {
  margin-top:25%;
}
`;

const fetcher = (url: string) => axios.get(url).then((res) => res.data);

export default function Profile() {
  const [data, setData] = useState<TokenData[] | null>(null);
  const { connected } = useWallet();
  const { userWalletId, userData: user, isAuthenticated, authLoading: userDataLoading } = useAuth();

  useEffect(() => {
    const fetchData = async () => {
      const result = await getPortfolio(userWalletId);
      if (result !== 'error') {
        setData(result);
      }
    };
    if (!userDataLoading && isAuthenticated && userWalletId) {
      fetchData();
    }
  }, [isAuthenticated, userDataLoading, userWalletId]);

  const { data: ninjaHoldings } = useSWR(isAuthenticated ? `/api/getNinjaHoldings/${userWalletId}` : null, fetcher, {
    errorRetryCount: 5,
  });
  const tokenSymbols = data?.map((x: any) => x?.tokenSymbol);
  const tokensAmountInUSD = data?.map((x: any) => parseFloat(x?.amountInUSD));

  const screen = useBreakpoint();
  return (
    <div>
      <Head>
        <title>Profile - Ninja NFT</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <PageWrapper className={connected ? 'height-f' : 'height-v'}>
          {!connected ? (

            <Row className="no-gutters">
              <Col className="mt-3" lg={12} md={12} sm={12}>
                <div className="text-center" style={{ marginTop: '10%' }}>
                  <div style={{ marginBottom: 30 }} className="setup-info">
                    Connect your wallet to continue
                  </div>
                  <WalletConnect />
                </div>
              </Col>
            </Row>
          ) : (
            <>
              <ContentArea>
                <Banner className="bg-top">
                  <BannerImg className="bg-banner-img" src={user?.banner ? user.banner : '/banner.jpg'} />
                </Banner>
                <Row className="no-gutters">
                  <Col className="mt-3" lg={4} md={4} sm={12}>
                    <ProfileInfoCard
                      ninjaTokens={ninjaHoldings?.data?.holdings ?? 0}
                      userData={user}
                      loading={userDataLoading}
                    />
                  </Col>

                  <Col className="mt-3" lg={8} md={8} sm={12}>
                    <BioAndSocials userData={user} />
                  </Col>
                </Row>
                <Row>
                  <Col sm={12} lg={6}>
                    <Holdings>

                      {!data ? (
                        <LoadingContainer>
                          <Spin />{' '}
                        </LoadingContainer>
                      ) : (
                        < HoldingsChart series={tokensAmountInUSD} labels={tokenSymbols} />



                      )}
                    </Holdings>
                  </Col>
                  <Col sm={12} lg={6}>
                    <Holdings>
                      <HoldingsAreaChart series={tokensAmountInUSD} labels={tokenSymbols} />
                      {/* <p className="comingsoon">COMING SOON</p> */}
                    </Holdings>
                  </Col>
                </Row>
                <TableHeader>
                  <span className="table-1"></span>
                  {/* <span className="table-2">Achievements</span> */}
                </TableHeader>

                <TransactionsTable />
              </ContentArea>
            </>
          )}
        </PageWrapper>
      </Layout>
    </div >
  );
}
